instanceof说明和用法：
Java 中的instanceof 运算符是用来在运行时指出对象是否是特定类的一个实例。instanceof通过返回一个布尔值来指出，这个对象是否是这个特定类或者是它的子类的一个实例。
用法：
result = object instanceof class
参数：
Result：布尔类型。
Object：必选项。任意对象表达式。
Class：必选项。任意已定义的对象类。
说明：
如果 object 是 class 的一个实例，则 instanceof 运算符返回 true。如果 object 不是指定类的一个实例，或者 object 是 null，则返回 false。

（会持续更新）这边讲的常用快捷键是指做完Keymap到Eclipse后的，不是纯Android Studio的，这边主要讲下比较常用的一些快捷键：
Ctrl+G / Ctrl+Alt+Shift+G：查询变量或者函数或者类在哪里被使用或被调用，后者是前者的复杂表现，可以选择查询范围等。
Alt+H：查找功能，全局查找
F4：查看类继承关系
F2：查看文档说明（函数使用说明）
Ctrl+E：查看最近打开过的文件
Ctrl+Shift+E：查看最近编辑过的文件
double Shift：全局查找，这个查看和Alt+H稍稍有些不同，这个是全局文件查找，到文件名称层面。
Ctrl+Shift+R：快速定位到你所想打开的文件。
Ctrl+K：选中一个变量后，快速定位到下一个使用该变量的地方（不过这个快捷键现在还存在一些bug，具体请看：Android Studio keymap到Eclipse后，查找下一个相同变量快捷键Ctrl+K失效）
Alt+↑：光标所在位置那行代码往上移动
Alt+↓：光标所在位置那行代码往下移动
Ctrl+D：删除光标所在位置那行代码
Ctrl+X：剪切光标所在位置那行代码
Alt+Shift+↓/Ctrl+C：复制光标所在行代码到下一行
Ctrl+O:快捷查找当前类中的函数，变量
Ctrl+Shift+R：修改名称
Alt+Enter：导入包
Alt+←：后退，定位到上个查看或者编辑的地方
Alt+→：往前定位，比如你定位到上个点后，想回去，就可以用这个快捷键
Ctrl+/：当行注释，反注释再按一次即可
Ctrl+Shift+/：模块注释，反注释再按一次即可,注意这边的”/“不能用小键盘的
Ctrl+Shift+小键盘/：折叠代码（Ctrl+Shift+小键盘*这个不灵了，今天没空了，后面会针对这个问题做解决，并更新上来），当然笔记本没小键盘，你可以自己改快捷键
Ctrl+Alt+S：打开settings界面
Ctrl+Alt+Shift+S：打开Project Structure界面
Alt+Shift+X：运行（Run）
Alt+Shift+D：调试运行（Debug）
Ctrl+F9：编译工程
Ctrl+Shift+K：push文件到Server（git）
Alt+Shift+m:方法提取
Debug类快捷键
F5：但不调试进入函数内部。
F7：由函数内部返回调用处。
F8：执行到下一个断点，没断点则执行完成。
Ctrl+Alt+F8/双击鼠标：直接查看选中位置的值，这两个快捷键稍稍有点区别，
具体区别请看这：Android Studio 调试过程中快捷查看断点处变量值（Ctrl+Shift+I无效）？

布局重用<include />

1)<include />标签可以使用单独的layout属性，这个也是必须使用的。
2)可以使用其他属性。<include />标签若指定了ID属性，而你的layout也定义了ID，则你的layout的ID会被覆盖，解决方案。
3)在include标签中所有的Android:layout_*都是有效的，前提是必须要写layout_width和layout_height两个属性。
4)布局中可以包含两个相同的include标签，引用时可以使用如下方法解决

减少视图层级<merge />
<merge/>标签在UI的结构优化中起着非常重要的作用，它可以删减多余的层级，优化UI。
<merge/>多用于替换FrameLayout或者当一个布局包含另一个时，
<merge/>标签消除视图层次结构中多余的视图组。例如你的主布局文件是垂直布局，
引入了一个垂直布局的include，这是如果include布局使用的LinearLayout就没意义了，
使用的话反而减慢你的UI表现。这时可以使用<merge/>标签优化。

需要时使用<ViewStub />
<ViewStub />标签最大的优点是当你需要时才会加载，使用他并不会影响UI初始化时的性能。
各种不常用的布局想进度条、显示错误消息等可以使用<ViewStub />标签，
以减少内存使用量，加快渲染速度。<ViewStub />是一个不可见的，大小为0的View。
<ViewStub />标签使用如下：

Button：

android:state_pressed="true" 按下Button时显示对应的图片；
android:state_focused="true" 焦点在Button上时显示对应图片；
android:state_enabled="true" 可用状态即常见状态下显示对应的图片；



https://developer.android.google.cn/reference/android/support/v7/widget/ShareActionProvider.html
主要内容：

完成二手车2.0原生开发中我的钱包、实名认证、设置、创建订单、生成二维码、申请POS机等模块。
在我们自己二手车团队中，我们移动开发团队是最先接触和了解二手车2.0项目，就需配合Java后台对自己的模块与Java api接口进行联调、测试并梳理相关的业务逻辑。
在完成开发后，针对测试提出的Bug进行修复，对逻辑和代码进行优化。
1、认证，在原有的基础上加了保存信息的功能，在用户没有提交认证的情况保存了信息，直到用户放弃或者提交成功后删除。
2、提现，提现页面打开比较慢，等待的时间比较长，所以进行预加载，减少打开提现页面的时间。
3、创建订单，最开始是先创建订单再生成二维码，这样会生成很多的无用订单，增加了数据的累赘，优化后是把创建订单和生成二维码并在一起完成。

修复你就凑文字，随意列举几个，比如认证，信息 几个等。。这样
优化 就是写逻辑和代码

熟悉公司的发展史和主要项目油卡、二手车、微配和企账通等。迟到早退的惩罚制度和法定节假日的放假规定等。

二手车是在线下买卖二手车，线上创建销售订单，再通过企账通把资金分配到指定账户。

1、在空余时间学习了现在较流行的MVP开发模式，相比以前的MVC开发模式更适合Android的开发，对于单元测试更加方便、单一和以后更好的升级、维护。
2、以前都是独立开发，不用进行代码的合并，所以很少用的版本管理的软件，都是采用备份。但现在是一个团队在开发，每天都会提交和更新最新的代码。
所以按我们常用的版本管理软件就去学习SVN，现在我能使用SVN进行代码提交、代码更新以及处理代码冲突等。以后还要进行更深入的学习。

总结：
个人总结
我于2017年4月19日进入公司，根据公司的需要，目前担任Android软件工程师一职，
负责二手车2.0版本A手机客户端的开发工作。将近3个月的时候在这个新的工作环境我收获颇深。
从前我都是独立完成整个项目，现在融入了一个团队，这让我第一次感觉到一个人和一个团队之间的差距，
过程中也遇到了许多困难，
但都很快就解决了，我想这是我最宝贵的经历，通过三个月的不断学习，
在项目开发中的不断锻炼以及同事、领导的帮助，我已逐渐融入这个大家庭，
个人的工作技能也有了明显的提高，在空余时间学习了MVP开发框架和SVN提交代码，虽然仍有一些不足，但三个月以来我付出了不少，
也收获了不少，我感觉自己成长了，也逐渐成熟了。

初到公司，加入了IT大工业技术中心，加入了二手车项目组，我也曾担心自己不知道该怎么与项目组的同事沟通，
担心不知道怎么做好工作，但是项目组的同事们都很亲切，我有不懂的地方他们都很耐心的帮我解答疑问，
以及他们团结向上的精神，让我很快的熟悉了工作，融入了项目组。
在这三个月的学习和工作中，我一直严格要求自己，遵循公司的规章制度，
认真完成领导布置的每一项任务，遇到的问题虚心的向项目组的其他同事学习、请教，
不断的提高、充实自己。开发过程中出现的一些差错，也有测试组的同事们指出，我修改后还会反复确认，
这些经历让我不断成熟，处理问题时考虑得更全面，杜绝类似情况的发生。
在此我要特地感谢部门的领导和同事们对我的指引和帮助，感谢他们对我工
作上失误的提醒和指正。

经过这三个月，我已经完成了我负责的开发任务，按时按质的完成分配的工作任务，
当然还有许多不足，开发的经验仍有待提高，编写代码的简洁性和完整性也需要进一步增强，
需要不断的继续学习以提高自己的工作能力。
总之，这三个月来我学到了很多，感悟了很多；看到公司的发展，看到部门的同事越来越多，
我深深地感到骄傲和自豪，也更加迫切的希望以一名正式员工的身份在这里工作，实现自己的奋斗目标，
体现自己的人生价值，和公司一起成长。

我会用谦虚的态度和饱满的热情做好我的本职工作，为公司创造价值，同公司一起展望美好的未来！



http://www.mgzxzs.com/sytool/chajixianci/ 限制词
Android studio 类注释模版 http://jingyan.baidu.com/article/e6c8503c7195b7e54f1a1898.html

http://blog.csdn.net/xw13106209/article/details/7049614/

http://www.25xt.com/android  //Android 设计标准
http://www.apkui.com/tags-13.html  //Android ui


http://web72-37976.58.xiniuyun.com/

http://www.iconfont.cn/ 阿里巴巴图片

https://www.kotlincn.net/docs/reference/  kotlin参考网站
自定义属性：
format :string,color,demension,integer,enum,reference,float,boolean,fraction,flag
 http://blog.csdn.net/pgalxx/article/details/6766677

 http://blog.5ibc.net/p/27554.html  关于三星手机4.3 是先setAdapter  还是先 addHeaderView 的问题


 http://hjhrq1991.info/